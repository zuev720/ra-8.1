{"version":3,"sources":["components/UserItem/UserItem.jsx","Hooks/useJsonFetch.jsx","components/List/UsersList.jsx","components/Details/Details.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserItem","props","className","activeUser","Number","id","onClick","handleUserClick","name","useJsonFetch","url","opt","useState","loading","setLoading","undefined","data","setData","error","setError","useEffect","fetch","then","result","json","UsersList","process","method","userItems","map","user","Details","selectedUser","UserInfo","src","avatar","alt","details","city","company","position","App","setSelectedUser","e","target","textContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e9b4573.chunk.js","sourcesContent":["import React from 'react';\n\nexport function UserItem(props) {\n    const className = (props.activeUser && Number(props.activeUser.id) === Number(props.id)) ? 'UserItemActive' : 'UserItem';\n    return (\n        <li\n            className={className}\n            id={props.id}\n            onClick={props.handleUserClick}>\n            {props.name}\n        </li>\n    )\n}\n","import {useEffect, useState} from 'react';\n\nexport function useJsonFetch(url, opt) {\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState(undefined);\n    const [error, setError] = useState(undefined);\n\n    useEffect(() => {\n        setLoading({loading: true});\n        try {\n            fetch(url, opt)\n                .then((result) => result.json())\n                .then((result) => setData(result))\n        } catch (error) {\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return [loading, data, error];\n}\n","import React from 'react';\nimport {UserItem} from '../UserItem/UserItem';\nimport {useJsonFetch} from '../../Hooks/useJsonFetch';\n\nexport function UsersList(props) {\n    const url = process.env.REACT_APP_USERS_URL + '/users.json';\n    const [loading, data, error] = useJsonFetch(url, {method: 'GET'});\n    const userItems = (!data)\n        ? null\n        : data.map((user) => {\n        return <UserItem key={user.id} activeUser={props.activeUser} handleUserClick={props.handleUserClick}{...user}/>\n    });\n\n    return (\n        <ul className={'UsersList'}>\n            {loading && <p>...Loading</p>}\n            {data && userItems}\n            {error && <p className={'Error'}>{error}</p>}\n        </ul>\n    )\n}\n","import React from 'react';\nimport {useJsonFetch} from '../../Hooks/useJsonFetch';\n\nexport function Details(props) {\n    const url = process.env.REACT_APP_USERS_URL + `/${props.selectedUser.id}.json`;\n\n    const [loading, data, error] = useJsonFetch(url, {method: 'GET'});\n\n    const UserInfo = () =>\n        <>\n            <img className={'userImage'} src={data.avatar} alt={data.name}/>\n            <h4 className={'userName'}>{data.name}</h4>\n            <p className={'userCity'}>{`City:  ${data.details.city}`}</p>\n            <p className={'userCompany'}>{`Company:  ${data.details.company}`}</p>\n            <p className={'userPosition'}>{`Position:  ${data.details.position}`}</p>\n        </>\n\n    return (\n        <div className={`Details`}>\n            {loading && <p>...Loading</p>}\n            {data && <UserInfo/>}\n            {error && <p className={'Error'}>{error}</p>}\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport './App.css';\nimport {UsersList} from './components/List/UsersList';\nimport {Details} from './components/Details/Details';\n\nfunction App() {\n    const [selectedUser, setSelectedUser] = useState(null);\n\n    const UserInfo = () => (selectedUser === null) ? null : <Details selectedUser={selectedUser}/>;\n\n    const HandleUserClick = (e) => {\n        if (selectedUser && selectedUser.id === e.target.id) return;\n        const user = {\n            id: e.target.id,\n            name: e.target.textContent,\n        }\n        setSelectedUser(user);\n    }\n    return (\n        <div className=\"App\">\n            <UsersList activeUser={selectedUser} handleUserClick={HandleUserClick}/>\n            <UserInfo />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}